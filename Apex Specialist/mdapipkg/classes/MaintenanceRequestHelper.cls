public class MaintenanceRequestHelper {
    /*
     * calculate and set the next due date using the maintenance cycle defined on the related work part records. If multiple work parts are used in the maintenance request, 
     * choose the shortest maintenance cycle to define the service date.*/
    public static void updateWorkOrders(List<Case> maintenanceRequests){
        List<Case> allCasesInfo = [SELECT Id, Equipment__c, Equipment__r.Maintenance_Cycle__c, 
                                   (SELECT Id, Equipment__r.Maintenance_Cycle__c FROM Work_Parts__r) FROM Case WHERE Id IN :maintenanceRequests];
        List<Case> newMaintenanceRequests = new List<Case>();
        Integer idx = 0;
        for (Case c : allCasesInfo) {
                Integer lowestValue;
            
                if (c.Work_Parts__r.size() == 1 && c.Work_Parts__r[0].Equipment__r.Maintenance_Cycle__c != null) {
                    lowestValue = Integer.valueOf(c.Work_Parts__r[0].Equipment__r.Maintenance_Cycle__c);
                }
                
                else if (c.Work_Parts__r.size() > 1 && c.Work_Parts__r[0].Equipment__r.Maintenance_Cycle__c != null) {
                    lowestValue = Integer.valueOf(c.Work_Parts__r[0].Equipment__r.Maintenance_Cycle__c);
                    for (Integer i = 1; i < c.Work_Parts__r.size(); i++) {
                        if (c.Work_Parts__r[i].Equipment__r.Maintenance_Cycle__c != null) {
                            lowestValue = Integer.valueOf(c.Work_Parts__r[i].Equipment__r.Maintenance_Cycle__c) < lowestValue 
                            ? Integer.valueOf(c.Work_Parts__r[i].Equipment__r.Maintenance_Cycle__c)
                            : lowestValue;
                        }
                        
                    }
                } else if (c.Equipment__c != null && c.Equipment__r.Maintenance_Cycle__c != null) {
                    lowestValue = Integer.valueOf(c.Equipment__r.Maintenance_Cycle__c);
                } else {                    
                    lowestValue = 365;
                } 
                
                Case newMaintenanceRequest = new Case();
                newMaintenanceRequest.Equipment__c = maintenanceRequests[idx].Equipment__c;
                newMaintenanceRequest.Vehicle__c = maintenanceRequests[idx].Vehicle__c;
                newMaintenanceRequest.Type = 'Routine Maintenance';
                newMaintenanceRequest.Subject='Routine maintenance request generated by system';
                newMaintenanceRequest.Date_Reported__c = Date.today();
                newMaintenanceRequest.Date_Due__c = Date.today().addDays(lowestValue);
                newMaintenanceRequest.Status = 'New';
                
                /*System.assert(newMaintenanceRequest.Date_Due__c != null);
                System.assert(newMaintenanceRequest.Status == 'New');
                System.assertEquals(maintenanceRequests[idx].Vehicle__c, newMaintenanceRequest.Vehicle__c);
                System.assertEquals(maintenanceRequests[idx].Equipment__c, newMaintenanceRequest.Equipment__c);
                System.assertEquals(maintenanceRequests[idx].Work_Parts__r, newMaintenanceRequest.Work_Parts__r);
                System.debug('Old: ' + maintenanceRequests[idx].Vehicle__c + ' New: ' + newMaintenanceRequest.Vehicle__c);
                System.debug('Old: ' + maintenanceRequests[idx].Equipment__c + ' New: ' + newMaintenanceRequest.Equipment__c);
                System.debug('Old: ' + maintenanceRequests[idx].Work_Parts__r + ' New: ' + newMaintenanceRequest.Work_Parts__r);*/
                newMaintenanceRequests.add(newMaintenanceRequest);
            
            idx = idx + 1;
        }
        if (newMaintenanceRequests.size() > 0) {
            insert newMaintenanceRequests;
        }
        
    }        
    
}